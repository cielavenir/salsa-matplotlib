From d0153b7c86e44a7a8acfbc593da03c7e8c9d125b Mon Sep 17 00:00:00 2001
From: Thomas A Caswell <tcaswell@gmail.com>
Date: Tue, 6 Oct 2015 01:08:03 -0400
Subject: [PATCH] TST: be a bit more defensive about imports/HAS_QT

---
 lib/matplotlib/tests/test_backend_qt4.py | 17 +++++++++++------
 lib/matplotlib/tests/test_backend_qt5.py | 14 +++++++-------
 2 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/lib/matplotlib/tests/test_backend_qt4.py b/lib/matplotlib/tests/test_backend_qt4.py
index f32cf74..e2fe57a 100644
--- a/lib/matplotlib/tests/test_backend_qt4.py
+++ b/lib/matplotlib/tests/test_backend_qt4.py
@@ -7,6 +7,7 @@
 from matplotlib.testing.decorators import cleanup, switch_backend
 from matplotlib.testing.decorators import knownfailureif
 from matplotlib._pylab_helpers import Gcf
+import matplotlib.style as mstyle
 import copy
 
 try:
@@ -16,7 +17,8 @@
     import mock
 
 try:
-    from matplotlib.backends.qt_compat import QtCore
+    with mstyle.context({'backend': 'Qt4Agg'}):
+        from matplotlib.backends.qt_compat import QtCore
 
     from matplotlib.backends.backend_qt4 import (MODIFIER_KEYS,
                                                  SUPER, ALT, CTRL, SHIFT)
@@ -25,11 +27,14 @@
     _, AltModifier, AltKey = MODIFIER_KEYS[ALT]
     _, SuperModifier, SuperKey = MODIFIER_KEYS[SUPER]
     _, ShiftModifier, ShiftKey = MODIFIER_KEYS[SHIFT]
-    py_qt_ver = int(QtCore.PYQT_VERSION_STR.split('.')[0])
-    if py_qt_ver != 4:
-        HAS_QT = False
-    else:
-        HAS_QT = True
+
+    try:
+        py_qt_ver = int(QtCore.PYQT_VERSION_STR.split('.')[0])
+    except AttributeError:
+        py_qt_ver = QtCore.__version_info__[0]
+    print(py_qt_ver)
+    HAS_QT = py_qt_ver == 4
+
 except ImportError:
     HAS_QT = False
 
diff --git a/lib/matplotlib/tests/test_backend_qt5.py b/lib/matplotlib/tests/test_backend_qt5.py
index b5ebf2f..8f56bbf 100644
--- a/lib/matplotlib/tests/test_backend_qt5.py
+++ b/lib/matplotlib/tests/test_backend_qt5.py
@@ -1,12 +1,12 @@
 from __future__ import (absolute_import, division, print_function,
                         unicode_literals)
-
 from matplotlib.externals import six
 
 from matplotlib import pyplot as plt
 from matplotlib.testing.decorators import cleanup, switch_backend
 from matplotlib.testing.decorators import knownfailureif
 from matplotlib._pylab_helpers import Gcf
+import matplotlib.style as mstyle
 import copy
 
 try:
@@ -16,7 +16,8 @@
     import mock
 
 try:
-    from matplotlib.backends.qt_compat import QtCore
+    with mstyle.context({'backend': 'Qt5Agg'}):
+        from matplotlib.backends.qt_compat import QtCore, __version__
     from matplotlib.backends.backend_qt5 import (MODIFIER_KEYS,
                                                  SUPER, ALT, CTRL, SHIFT)
 
@@ -24,11 +25,10 @@
     _, AltModifier, AltKey = MODIFIER_KEYS[ALT]
     _, SuperModifier, SuperKey = MODIFIER_KEYS[SUPER]
     _, ShiftModifier, ShiftKey = MODIFIER_KEYS[SHIFT]
-    py_qt_ver = int(QtCore.PYQT_VERSION_STR.split('.')[0])
-    if py_qt_ver != 5:
-        HAS_QT = False
-    else:
-        HAS_QT = True
+
+    py_qt_ver = int(__version__.split('.')[0])
+    HAS_QT = py_qt_ver == 5
+
 except ImportError:
     HAS_QT = False
 
