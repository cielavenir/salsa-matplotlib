#! /bin/sh /usr/share/dpatch/dpatch-run
## build_fix.dpatch by Marco Presi (Zufus) <zufus@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad matplotlib-0.82~/setupext.py matplotlib-0.82/setupext.py
--- matplotlib-0.82~/setupext.py	2005-06-08 13:57:59.000000000 -0400
+++ matplotlib-0.82/setupext.py	2005-10-17 21:43:33.000000000 -0400
@@ -212,11 +212,11 @@
 	print "Using default library and include directories for Tcl and Tk because a"
 	print "Tk window failed to open.  You may need to define DISPLAY for Tk to work"
 	print "so that setup can determine where your libraries are located."
-	o.tcl_lib = "/usr/local/lib"
-	o.tcl_inc = "/usr/local/include"
-	o.tk_lib = "/usr/local/lib"
-        o.tk_inc = "/usr/local/include"
-	o.tkv = ""
+	o.tcl_lib = "/usr/lib"
+	o.tcl_inc = "/usr/include/tcl8.4"
+	o.tk_lib = "/usr/lib"
+        o.tk_inc = "/usr/include/tcl8.4"
+	o.tkv = "8.4"
     else:
 	tk.withdraw()
 	o.tcl_lib = os.path.join((tk.getvar('tcl_library')), '../')
diff -urNad matplotlib-0.82~/setup.py matplotlib-0.82/setup.py
--- matplotlib-0.82~/setup.py	2005-06-15 11:21:27.000000000 -0400
+++ matplotlib-0.82/setup.py	2005-10-17 21:48:46.000000000 -0400
@@ -27,20 +27,20 @@
 BUILD_AGG = 1
 
 # Render Agg to the GTK canvas
-#BUILD_GTKAGG       = 0
-BUILD_GTKAGG       = 'auto'
+BUILD_GTKAGG       = 1
+#BUILD_GTKAGG       = 'auto'
 
 BUILD_GTK          = 'auto'
 
 # build TK GUI with Agg renderer ; requires Tkinter Python extension
 # and Tk includes
 # Use False or 0 if you don't want to build
-#BUILD_TKAGG        = 0
-BUILD_TKAGG        = 'auto'
+BUILD_TKAGG        = 1
+#BUILD_TKAGG        = 'auto'
 
 # build a small extension to manage the focus on win32 platforms.
-#BUILD_WINDOWING        = 0
-BUILD_WINDOWING        = 'auto'
+BUILD_WINDOWING        = 0
+#BUILD_WINDOWING        = 'auto'
 
 
 VERBOSE =  False # insert lots of diagnostic prints in extension code
@@ -82,9 +82,9 @@
 data.extend(glob.glob('images/*.svg'))
 data.extend(glob.glob('images/*.png'))
 data.extend(glob.glob('images/*.ppm'))
 data.append('.matplotlibrc')
 
-data_files=[('share/matplotlib', data),]
+data_files=[('share/matplotlib', data)]
 
 # Figure out which array packages to provide binary support for
 # and define the NUMERIX value: Numeric, numarray, or both.
@@ -161,6 +161,7 @@
 build_transforms(ext_modules, packages, NUMERIX)
 build_enthought(ext_modules, packages)
 
+'''
 if BUILD_GTK:
     try:
         import gtk
@@ -168,12 +169,13 @@
         print 'GTK requires pygtk'
         BUILD_GTK=0
     except RuntimeError:
-        print 'pygtk present but import failed'
-    
+        print 'pygtk present but import failed' 
+'''
 
 if BUILD_GTK:
     build_gdk(ext_modules, packages, NUMERIX)
-    
+
+'''    
 if BUILD_GTKAGG:
     try:
         import gtk
@@ -182,17 +184,23 @@
         BUILD_GTKAGG=0
     except RuntimeError:
         print 'pygtk present but import failed'
+'''
+
 if BUILD_GTKAGG:
     BUILD_AGG = 1
     build_gtkagg(ext_modules, packages, NUMERIX)
 
+'''
 if BUILD_TKAGG:
     try: import Tkinter
     except ImportError: print 'TKAgg requires TkInter'
     else:
         BUILD_AGG = 1
         build_tkagg(ext_modules, packages, NUMERIX)
+'''
 
+if BUILD_TKAGG:
+    build_tkagg(ext_modules, packages, NUMERIX)
 
 if BUILD_AGG:
     build_agg(ext_modules, packages, NUMERIX)
